<?xml version="1.0" encoding="UTF-8"?><SQLQuery AllowBuffering="false" AllowFuture="true" AutoTypeParameters="false" CacheDuration="0" CacheDurationUnits="M" Columns="" Comment="" Connector="" DateColumn="" DateFormat="MM/dd/yyyy HH:mm:ss" Debug="false" Description="" DocType="SQLQuery" Duration="60" DurationUnits="M" EndDate="" FilterExpr="" FixedQuery="" Group="" GroupingExpr="" ID="32588" InlineTransform="" IntervalCount="1" IsCachable="false" JoinExpr="" Mask="" Method="" Mode="FixedQuery" NumberFormat="0.00" Param.1="20230605" Param.10="" Param.11="" Param.12="" Param.13="" Param.14="" Param.15="" Param.16="" Param.17="" Param.18="" Param.19="" Param.2="20230609" Param.20="" Param.21="" Param.22="" Param.23="" Param.24="" Param.25="" Param.26="" Param.27="" Param.28="" Param.29="" Param.3="1" Param.30="" Param.31="" Param.32="" Param.4="" Param.5="" Param.6="" Param.7="" Param.8="" Param.9="" ParamDescription.1="" ParamDescription.10="" ParamDescription.11="" ParamDescription.12="" ParamDescription.13="" ParamDescription.14="" ParamDescription.15="" ParamDescription.16="" ParamDescription.17="" ParamDescription.18="" ParamDescription.19="" ParamDescription.2="" ParamDescription.20="" ParamDescription.21="" ParamDescription.22="" ParamDescription.23="" ParamDescription.24="" ParamDescription.25="" ParamDescription.26="" ParamDescription.27="" ParamDescription.28="" ParamDescription.29="" ParamDescription.3="" ParamDescription.30="" ParamDescription.31="" ParamDescription.32="" ParamDescription.4="" ParamDescription.5="" ParamDescription.6="" ParamDescription.7="" ParamDescription.8="" ParamDescription.9="" ParamType.1="" ParamType.10="" ParamType.11="" ParamType.12="" ParamType.13="" ParamType.14="" ParamType.15="" ParamType.16="" ParamType.17="" ParamType.18="" ParamType.19="" ParamType.2="" ParamType.20="" ParamType.21="" ParamType.22="" ParamType.23="" ParamType.24="" ParamType.25="" ParamType.26="" ParamType.27="" ParamType.28="" ParamType.29="" ParamType.3="" ParamType.30="" ParamType.31="" ParamType.32="" ParamType.4="" ParamType.5="" ParamType.6="" ParamType.7="" ParamType.8="" ParamType.9="" Password="" PathID="1363" Query="--SLC_OPR_DURATION_PERS_DETAIL_QRY&#10;&#10;set NOCOUNT on&#10;&#10;---SAP DATALARI----&#10;&#10;SELECT cast(PERNR as int) PERNR,&#10;       ENAME ENAME,&#10;       WERKS WERKS,&#10;       BTRTL BTRTL,&#10;       PERSG PERSG,&#10;       PERSK PERSK,&#10;       ORGEH ORGEH,&#10;       PLANS PLANS,&#10;       KOSTL KOSTL,&#10;       DATUM DATUM,&#10;       BEGUZ BEGUZ,&#10;       ENDUZ ENDUZ,&#10;       SUM(ZNCSZ) ZNCSZ,&#10;       SUM(ZNCGZ) ZNCGZ,&#10;       SUM(ZF150) ZF150,&#10;       SUM(ZF200) ZF200,&#10;     --  REC_DATE REC_DATE&#10;       Z_START_DATE,&#10;       Z_END_DATE&#10;     into #TempTable1&#10;FROM EST.dbo.[HIST_PERSONAL_PDKS]&#10;--INNER JOIN CNFG_COST_CENTER2  ON dbo.CNFG_COST_CENTER2.COST_CENTER= dbo.[HIST_PERSONAL_PDKS].KOSTL&#10;&#9;WHERE&#10;&#9;&#9;&#9;&#9;(DATUM BETWEEN '[Param.1]' AND '[Param.2]'&#10;&#9;&#9;&#9;&#9;&#9;or DATUM BETWEEN '[Param.1]' AND '[Param.2]'&#10;&#9;&#9;&#9;&#9;&#9;or (DATUM &lt; '[Param.1]'&#10;&#9;&#9;&#9;&#9;&#9;&#9;and DATUM &gt; '[Param.2]')&#10;          )&#10;          AND (dbo.[HIST_PERSONAL_PDKS].ZNCSZ+dbo.[HIST_PERSONAL_PDKS].ZF150+dbo.[HIST_PERSONAL_PDKS].ZF200) &gt;0&#10;          --AND  dbo.CNFG_COST_CENTER2.[GROUP_ID]=[Param.3]  &#10;          --AND  PERNR like '%2311'&#10;          GROUP BY PERNR, ENAME, WERKS, BTRTL, PERSG, PERSK, ORGEH, PLANS, KOSTL,DATUM,BEGUZ,ENDUZ,Z_START_DATE,Z_END_DATE&#10;          &#10;      -- SELECT * FROM  #TempTable1&#10;&#10;&#10;&#10;&#10;----SAP DATALARI----&#10;&#10;&#10;----MII DATALARI----&#10;&#10;SELECT  &#10;cast(T4.[OPER_ID] as int) OPER_ID, &#10;T4.SNAME, &#10;CAST(T4.LOGON_TIME AS DATE) LOGON_TIME,&#10;CAST(T4.LOGOFF_TIME AS DATE) LOGOFF_TIME,&#10;ISNULL(SUM(T4.[OFFTIME]),0) OFFTIME,&#10;ISNULL(SUM( T4.[PREPTIME]),0) PREPTIME, &#10;ISNULL(SUM(T4.[UPTIME]),0) UPTIME,&#10;ISNULL(SUM( T4.PLANNED_DOWN),0) PLANNED_DOWN, &#10;ISNULL(SUM(T4.UNPLANNED_DOWN),0) UNPLANNED_DOWN,&#10;ISNULL(SUM(LOGON_DURATION),0) LOGON_DURATION,&#10;ISNULL(SUM(MACHINE_CNT_CYCLE)/60,0) MACHINE_CNT_CYCLE&#10;into #TempTable2&#10;FROM (&#10;  ----------1-------------&#10; SELECT&#10;&#9;[OPER_ID],&#10;&#9;SNAME,&#10;&#9;[LOGON_DURATION] ,&#10;  [LOGON_TIME],&#10;&#9;[LOGOFF_TIME],&#10;  [MACHINE_CNT_CYCLE],&#10;&#9;sum(case when T3.PRD_STEP = 0 then datediff(minute, case when T3.START_TIME &lt; T3.LOGON_TIME then T3.LOGON_TIME else T3.START_TIME end,&#10;  case when T3.END_TIME &gt; T3.LOGOFF_TIME or T3.END_TIME is null then T3.LOGOFF_TIME else T3.END_TIME end) end) &quot;OFFTIME&quot;,&#10;&#9;sum(case when T3.PRD_STEP = 1 then datediff(minute, case when T3.START_TIME &lt; T3.LOGON_TIME then T3.LOGON_TIME else T3.START_TIME end,&#10;  case when T3.END_TIME &gt; T3.LOGOFF_TIME or T3.END_TIME is null then T3.LOGOFF_TIME else T3.END_TIME end) end) &quot;PREPTIME&quot;,&#10;&#9;sum(case when T3.STATUS = 1 then datediff(minute, case when T3.START_TIME &lt; T3.LOGON_TIME then T3.LOGON_TIME else T3.START_TIME end,&#10;  case when T3.END_TIME &gt; T3.LOGOFF_TIME or T3.END_TIME is null then T3.LOGOFF_TIME else T3.END_TIME end) end) &quot;UPTIME&quot;,&#10;&#9;sum(case when (T3.PRD_STEP = 2 or T3.PRD_STEP = 3) AND T3.STATUS = 0 AND T3.PLANNED = 1 then datediff(minute, case when T3.START_TIME &lt; T3.LOGON_TIME then T3.LOGON_TIME else T3.START_TIME end,&#10;  case when T3.END_TIME &gt; T3.LOGOFF_TIME or T3.END_TIME is null then T3.LOGOFF_TIME else T3.END_TIME end) end) &quot;PLANNED_DOWN&quot;,&#10;&#9;sum(case when (T3.PRD_STEP = 2 or T3.PRD_STEP = 3) AND T3.STATUS = 0 AND T3.PLANNED = 0 then datediff(minute, case when T3.START_TIME &lt; T3.LOGON_TIME then T3.LOGON_TIME else T3.START_TIME end,&#10;  case when T3.END_TIME &gt; T3.LOGOFF_TIME or T3.END_TIME is null then T3.LOGOFF_TIME else T3.END_TIME end) end) &quot;UNPLANNED_DOWN&quot;&#10;FROM&#10;&#9;(&#10;&#9;&#10;&#9;----------2---------&#10;&#9;SELECT&#10;&#9;&#9;T1.[OPER_ID],&#10;&#9;&#9;T1.SNAME,&#10;&#9;&#9;T1.[MACHINE_ID],&#10;&#9;&#9;T1.[LOGON_DURATION] ,&#10;&#9;&#9;T1.[LOGON_TIME],&#10;&#9;&#9;T1.[LOGOFF_TIME],&#10;    T1.[MACHINE_CNT_CYCLE],&#10;&#9;&#9;down.[MACHINE_ID],&#10;&#9;&#9;down.[START_TIME] START_TIME,&#10;&#9;&#9;down.[END_TIME] END_TIME,&#10;&#9;&#9;down.STATUS,&#10;&#9;&#9;down.[REASON_ID],&#10;&#9;&#9;down.[INSERT_BY],&#10;&#9;&#9;down.PRD_STEP,&#10;&#9;&#9;reas.PLANNED&#10;&#9;FROM&#10;&#9;&#9;(&#10;&#9;&#9;---------------3-------------------&#10;&#9;&#9;SELECT&#10;&#9;&#9;&#9;T2.[OPER_ID],&#10;&#9;&#9;&#9;T2.SNAME,&#10;&#9;&#9;&#9;T2.[MACHINE_ID],&#10;&#9;&#9;&#9;MIN([LOGON_TIME]) LOGON_TIME,&#10;&#9;&#9;&#9;MAX([LOGOFF_TIME]) LOGOFF_TIME,&#10;&#9;&#9;&#9;SUM(LOGON_DURATION) LOGON_DURATION,&#10;      SUM(MACHINE_CNT_CYCLE) MACHINE_CNT_CYCLE&#10;&#9;&#9;FROM&#10;&#9;&#9;&#9;(&#10;&#9;&#9;&#9;---------------4------------&#10;&#9;&#9;&#9;SELECT&#10;&#9;&#9;&#9;&#9;[OPER_ID],&#10;&#9;&#9;&#9;&#9;SNAME,&#10;&#9;&#9;&#9;&#9;[MACHINE_ID],&#10;&#9;&#9;&#9;&#9;[LOGON_TIME],&#10;&#9;&#9;&#9;&#9;[LOGOFF_TIME],&#10;CASE&#10;         &#9;&#9;when &#10;         &#9;&#9;MACHINE_ID&lt;1000&#10;        &#9;&#9;then&#10;        &#9;&#9;[MACHINE_CNT_CYCLE] ELSE 0 END MACHINE_CNT_CYCLE,&#10;        &#9;&#9;CASE&#10;         &#9;&#9;when &#10;         &#9;&#9;MACHINE_ID&lt;1000&#10;        &#9;&#9;then&#10;&#9;&#9;&#9;&#9;sum(cast ( cast(datediff(minute, [LOGON_TIME], [LOGOFF_TIME] ) as DECIMAL(8, 2)) as DECIMAL(8, 1))) &#10;&#9;&#9;&#9;&#9;else 0 end &#10;&#9;&#9;&#9;&#9;LOGON_DURATION&#10;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;FROM&#10;&#9;&#9;&#9;&#9;HIST_OPERATOR_LOGON , [CNFG_MACHINE] cm&#10;&#9;&#9;&#9;where&#10;&#9;&#9;&#9;&#9;(LOGON_TIME between '[Param.1] 00:00:00' and '[Param.2] 23:59:59'&#10;&#9;&#9;&#9;&#9;&#9;or LOGOFF_TIME between '[Param.1] 00:00:00' and '[Param.2] 23:59:59'&#10;&#9;&#9;&#9;&#9;&#9;or (LOGON_TIME &lt; '[Param.1] 00:00:00'&#10;&#9;&#9;&#9;&#9;&#9;&#9;and LOGOFF_TIME &gt; '[Param.2] 23:59:59')&#10;          )&#10;               &#10;              AND dbo.[HIST_OPERATOR_LOGON].[MACHINE_ID] = cm.[ID]&#10;              AND cm.[GROUP_ID] = [Param.3]  &#10;&#9;&#9;&#9;--&#9;AND [OPER_ID] = 2311&#10;&#9;&#9;&#9;group by&#10;&#9;&#9;&#9;&#9;[OPER_ID],&#10;&#9;&#9;&#9;&#9;SNAME,&#10;&#9;&#9;&#9;&#9;[MACHINE_ID] ,&#10;&#9;&#9;&#9;&#9;[LOGON_TIME],&#10;&#9;&#9;&#9;&#9;[LOGOFF_TIME]&#10;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;----------------4------------------&#9;&#10;        )T2&#10;GROUP BY&#10;&#9;&#9;&#9;T2.[OPER_ID],&#10;&#9;&#9;&#9;T2.[MACHINE_ID],&#10; &#9;&#9;&#9;CAST(LOGON_TIME AS DATE),&#10;      &#9;&#9;&#9;CAST(LOGOFF_TIME AS DATE)&#10;-----------3-----------&#10;  ) T1,&#10;&#9;&#9;[HIST_DOWNTIME] down&#10;left JOIN [CNFG_DOWNTIME_REASON] reas ON&#10;&#9;&#9;down.[REASON_ID] = reas.[ID]&#10;WHERE&#10;&#9;&#9;T1.[MACHINE_ID] = down.[MACHINE_ID]&#10;and (down.START_TIME between T1.LOGON_TIME and T1.LOGOFF_TIME&#10;&#9;or down.END_TIME between T1.LOGON_TIME and T1.LOGOFF_TIME&#10;&#9;or (down.START_TIME &lt; T1.LOGON_TIME&#10;&#9;&#9;and down.END_TIME &gt; T1.LOGOFF_TIME)&#10;&#9;or (down.END_TIME &gt; T1.LOGON_TIME&#10;&#9;&#9;and T1.LOGOFF_TIME is null)&#10;      )&#10;GROUP BY&#10;&#9;&#9;T1.[OPER_ID],&#10;&#9;&#9;T1.SNAME,&#10;&#9;&#9;T1.[MACHINE_ID],&#10;&#9;&#9;T1.[LOGON_DURATION] ,&#10;&#9;&#9;T1.[LOGON_TIME],&#10;&#9;&#9;T1.[LOGOFF_TIME] ,&#10;    T1.[MACHINE_CNT_CYCLE],&#10;&#9;&#9;down.[MACHINE_ID],&#10;&#9;&#9;down.[START_TIME],&#10;&#9;&#9;down.[END_TIME],&#10;&#9;&#9;down.STATUS,&#10;&#9;&#9;down.[REASON_ID],&#10;&#9;&#9;down.[INSERT_BY],&#10;&#9;&#9;down.PRD_STEP,&#10;&#9;&#9;reas.PLANNED&#10;---------2-----------&#10;  )T3&#10;  &#10;  GROUP BY [OPER_ID], SNAME, [LOGON_DURATION], [MACHINE_CNT_CYCLE],LOGON_TIME,LOGOFF_TIME&#10;  &#10;  ----------1-------------&#10;  &#10;  &#10;  ) T4 &#10;    GROUP BY T4.[OPER_ID], T4.SNAME,&#10;    CAST(LOGON_TIME AS DATE),&#10;    CAST(LOGOFF_TIME AS DATE)&#10;   -- LOGON_TIME,LOGOFF_TIME&#10;&#10;    &#10;   &#10;--SELECT * FROM  #TempTable2&#10;&#10;&#10;  ----MII DATALARI----  &#10;    &#10;select *,&#10;-- CASE WHEN datepart(hh, CONVERT (DATETIME ,CONVERT( NVARCHAR,DATUM, 102 )+ ' '+CONVERT( NVARCHAR,BEGUZ, 108 )))=23&#10;--  THEN str_replace(CONVERT( CHAR( 19 ), (CONVERT( NVARCHAR,DATUM, 102 )+' '+ '00:00:01'), 23 ),'T',' ')&#10;--  ELSE str_replace(CONVERT( CHAR( 19 ), (CONVERT( NVARCHAR,DATUM, 102 )+' '+ CONVERT( NVARCHAR,BEGUZ, 108 )), 23 ),'T',' ')&#10;--END GIRIS_ZAMANI,&#10;&#10;--CASE WHEN datepart(hh, CONVERT (DATETIME ,CONVERT( NVARCHAR,DATUM, 102 )+ ' '+CONVERT( NVARCHAR,ENDUZ, 108 )))=0&#10;--  THEN str_replace(CONVERT( CHAR( 19 ), (CONVERT( NVARCHAR,DATUM, 102 )+' '+ '23:59:59'), 23 ),'T',' ')&#10;-- ELSE str_replace(CONVERT( CHAR( 19 ), (CONVERT( NVARCHAR,DATUM, 102 )+' '+ CONVERT( NVARCHAR,ENDUZ, 108 )), 23 ),'T',' ')&#10;--END CIKIS_ZAMANI,&#10; &#10;str_replace(CONVERT( CHAR( 19 ), Z_START_DATE, 23 ),'T',' ') GIRIS_ZAMANI,&#10;str_replace(CONVERT( CHAR( 19 ), Z_END_DATE, 23 ),'T',' ') CIKIS_ZAMANI,&#10; (ZF150+ZF200)*60 FM,&#10; (ZNCSZ+ZF150+ZF200)*60 FIILISURE&#10;,(((ZNCSZ+ZF150+ZF200)*60) - LOGON_DURATION) CALISILMAYANSURE1&#10;,CASE WHEN (((ZNCSZ+ZF150+ZF200)*60) - LOGON_DURATION)&lt;0 THEN 0 ELSE (((ZNCSZ+ZF150+ZF200)*60) - LOGON_DURATION) END CALISILMAYANSURE&#10;,(((ZNCSZ+ZF150+ZF200)*60) - LOGON_DURATION)&#10;+(UNPLANNED_DOWN+PREPTIME) URETIMOLMAYANSURE&#10;,   case when convert(decimal,((ZNCSZ+ZF150+ZF200)*60)) =0 then 0 else  &#10;  convert(int,((convert(decimal,MACHINE_CNT_CYCLE)/ convert(decimal,((ZNCSZ+ZF150+ZF200)*60))))*100) end  PRODUCTIVITY&#10;&#10;,case WHEN (LOGON_DURATION+  convert(decimal,(UNPLANNED_DOWN+PREPTIME)))=0 &#10;THEN 0&#10;ELSE&#10;convert(int,(convert(decimal,MACHINE_CNT_CYCLE)/&#10; (convert(decimal,((ZNCSZ+ZF150+ZF200)*60))- --fiili süre&#10;((convert(decimal,((ZNCSZ+ZF150+ZF200)*60))-LOGON_DURATION)+--çalışılmayan süre&#10;  convert(decimal,(UNPLANNED_DOWN+PREPTIME))))&#10;  &#10;  )*100) END EFFICIENCY&#10;&#10;&#10;from #TempTable1 S1  &#10;INNER JOIN  #TempTable2 M1&#10;ON &#10; S1.PERNR =M1.OPER_ID&#10; AND     &#10;  (&#10;    (S1.DATUM &gt; M1.LOGON_TIME and S1.DATUM &lt; M1.LOGOFF_TIME)&#10;    or (S1.DATUM &gt; M1.LOGON_TIME and S1.DATUM &lt;= M1.LOGOFF_TIME)&#10;    or (S1.DATUM = M1.LOGON_TIME and S1.DATUM = M1.LOGOFF_TIME)&#10;  )&#10; &#10;--SELECT * FROM  #TempTable1&#10;--SELECT * FROM  #TempTable2&#10;&#10;&#10;drop table  #TempTable1&#10;drop table  #TempTable2 &#10;" QueryParams="" ReaderRoles="SAP_XMII_User" RestrictedPropertyOverride="false" RowCount="9999" SaveDate="02/23/2024 10:53:58" Schedule="" SelectedColumns="" Server="MII_DB" Service="" SortExpr="" StartDate="" Tables="" Time="" TimePeriod="" Trace="false" UseTypedParams="false" UserName="" Version="15.0.4.2" WriterRoles="SAP_XMII_Super_Administrator,SAP_XMII_Administrator,SAP_XMII_Developer" XParamName.1="" XParamName.10="" XParamName.11="" XParamName.12="" XParamName.13="" XParamName.14="" XParamName.15="" XParamName.16="" XParamName.2="" XParamName.3="" XParamName.4="" XParamName.5="" XParamName.6="" XParamName.7="" XParamName.8="" XParamName.9="" XParamValue.1="" XParamValue.10="" XParamValue.11="" XParamValue.12="" XParamValue.13="" XParamValue.14="" XParamValue.15="" XParamValue.16="" XParamValue.2="" XParamValue.3="" XParamValue.4="" XParamValue.5="" XParamValue.6="" XParamValue.7="" XParamValue.8="" XParamValue.9=""><Tasks/><ETCServers/><ETCObjects/></SQLQuery>